"use strict";

var pecents = {
  '7': {
    '300': 16.33,
    '1000': 14.9,
    '2000': 12.45,
    '2500': 11.96,
    '3000': 13.3,
    '5000': 11.98,
    '15000': 11.9
  },
  '14': {
    '300': 33,
    '1000': 24.9,
    '2000': 22.45,
    '2500': 21.96,
    '3000': 21.63,
    '5000': 20.98,
    '15000': 20.9
  },
  '30': {
    '300': 49.67,
    '1000': 39.9,
    '2000': 39.95,
    '2500': 39.96,
    '3000': 39.97,
    '5000': 39.98,
    '15000': 39.33
  }
};
$(document).ready(function () {
  $(document).delegate('.mob-menu__trigger', 'click', function () {
    $('.mob-menu').hasClass('opened') ? hideMobMenu() : showMobMenu();
  });
  $(document).delegate('.mob-menu__bg', 'click', function () {
    hideMobMenu();
  });
  $(document).delegate('.menu .lang .current', 'click', function () {
    var isOpen = $('.menu .lang').hasClass('opened');
    var expand = $('.menu .lang .expand');

    if (isOpen) {
      expand.slideUp(250);
    } else {
      expand.slideDown(250);
    }

    $('.menu .lang').toggleClass('opened');
  });
  $(document).delegate('body', 'click', function (event) {
    if (!$(event.target).closest('.menu .lang').length) {
      var isOpen = $('.menu .lang').hasClass('opened');
      var expand = $('.menu .lang .expand');

      if (isOpen) {
        expand.slideUp(250);
        $('.menu .lang').removeClass('opened');
      }
    }
  });

  function hideMobMenu() {
    var menuWidth = $('.mob-menu__inner').width();
    $('.mob-menu__inner').animate({
      left: menuWidth
    }, 350);
    $('.mob-menu__bg').animate({
      opacity: '0'
    }, 350, function () {
      $('.mob-menu').removeClass('opened');
    });
  }

  function showMobMenu() {
    $('.mob-menu').addClass('opened');
    $('.mob-menu__inner').animate({
      left: '0'
    }, 350);
    $('.mob-menu__bg').animate({
      opacity: '1'
    }, 350);
  }

  $(document).delegate('.calculator__term--item__inner', 'click', function (e) {
    var _this = $(e.currentTarget),
        parent = _this.parent();

    if (!parent.hasClass('active')) {
      var daysCount = +_this.find('.count').text();
      $('.calculator__term--item').removeClass('active');
      parent.addClass('active');
      var date = new Date();
      date.setDate(date.getDate() + daysCount);
      var dateFormated = "".concat(date.getDate(), ".").concat(date.getMonth() + 1, ".").concat(date.getFullYear());
      $('.calculator__datas .end-date').text(dateFormated);
      reCalculate(false, daysCount);
    }
  });
  $('.calculator__term--item:last-child .calculator__term--item__inner').trigger('click');
});
$(window).on('load', function () {
  $('.calculator__slider').show();
  var rangeSlider = $('#range-credit-summ').rangeslider({
    polyfill: false,
    // Callback function
    onSlide: function onSlide(position, value) {
      $('.calculator .summ-input input').val(value);
      $('.summ-start .summ').text(value);
      reCalculate(value, false);
    }
  });
  $('.calculator__slider .plus').click(function () {
    var value = getSumm(),
        step = +rangeSlider[0].step;
    $('input[type="range"]').val(value + step).change();
  });
  $('.calculator__slider .minus').click(function () {
    var value = getSumm(),
        step = +rangeSlider[0].step;
    $('input[type="range"]').val(value - step).change();
  });
  $('.calculator .summ-input input').keypress(function (e) {
    if (e.keyCode < 48 || e.keyCode > 57) {
      e.preventDefault();
      return false;
    }
  }).change(function (e) {
    var value = $(this).val();
    $('#range-credit-summ').val(value).change();
  });
});

function getPercentBySumm(daysCount, summ) {
  var percent;

  if (summ >= 300 && summ < 1000) {
    percent = pecents[daysCount]['300'];
  } else if (summ >= 1000 && summ < 2000) {
    percent = pecents[daysCount]['1000'];
  } else if (summ >= 2000 && summ < 2500) {
    percent = pecents[daysCount]['2000'];
  } else if (summ >= 2500 && summ < 3000) {
    percent = pecents[daysCount]['2500'];
  } else if (summ >= 3000 && summ < 5000) {
    percent = pecents[daysCount]['3000'];
  } else if (summ >= 5000 && summ < 15000) {
    percent = pecents[daysCount]['5000'];
  } else if (summ >= 15000) {
    percent = pecents[daysCount]['15000'];
  }

  return percent;
}

function getDaysCount() {
  return +$('.calculator__term--item.active .count').text();
}

function calculate(summ, percent) {
  var calculatedValue = summ * percent / 100;
  calculatedValue = Math.round(calculatedValue);
  return calculatedValue;
}

function getSumm() {
  return +$('#range-credit-summ').val();
}

function calculateDiscont(summ) {
  return summ * 0.25;
}

function reCalculate(summ, daysCount) {
  if (!summ) {
    summ = getSumm();
  }

  if (!daysCount) {
    daysCount = getDaysCount();
  }

  var percent = getPercentBySumm(daysCount, summ),
      summByPrice = calculate(percent, summ),
      discontSumm = calculateDiscont(summByPrice);
  summByPrice = Math.round(summByPrice);
  discontSumm = Math.round(discontSumm);
  $('.calculator__datas .cancelled').text(summByPrice.toFixed(2));
  $('.calculator__datas .new .summ').text(discontSumm);
  $('.calculator__datas .total .summ').text(summ + discontSumm);
}